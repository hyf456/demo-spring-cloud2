
### 定义应用名称
spring.application.name = spring-cloud-stream-kafka
### 配置Web端口
server.port = 8080
### 失效的管理安全
### 方式二  直接暴露所有端点
management.endpoints.web.exposure.include = *

### 配置需要的kafka 主题
kafka.topic = topic

### Spring Kafka 配置信息
spring.kafka.bootstrap-servers=localhost:9092
### Kafka 生产者配置
#spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
### Kafka 消费者配置
spring.kafka.consumer.group-id=gupao-1
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer


### 定义 Spring Cloud Stream Source 消息去向
#### 针对 Kafka 而言，基本模式下
# Spring.cloud.stream.bindings.${output-name}.destination = ${kafka.topic}
spring.cloud.stream.bindings.output.destination = ${kafka.topic}
spring.cloud.stream.bindings.gupao.destination = gupao


spring.cloud.stream.bindings.input.destination = ${kafka.topic}

